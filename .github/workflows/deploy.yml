name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install
        working-directory: ./app

      - name: Run ESLint
        run: npm run lint
        working-directory: ./app

  test:
    name: Jest Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install
        working-directory: ./app

      - name: Run Jest
        run: npm test
        working-directory: ./app
        env:
          NODE_ENV: test
          AWS_ACCESS_KEY_ID: fake-key
          AWS_SECRET_ACCESS_KEY: fake-secret
          DYNAMODB_ENDPOINT: http://localhost:8000

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install

      - name: Get Terraform Output
        run: |
          cd infrastructure
          terraform init
          terraform output -json > ../tf_outputs.json

      # Extract URL to ENV variable
      - name: Extract API URLs from Terraform output
        run: |
          COMPANY=$(jq -r '.api_url_company_search.value' tf_outputs.json)
          LEVEL=$(jq -r '.api_url_level_search.value' tf_outputs.json)
          echo "ENDPOINTS=$COMPANY,$LEVEL" >> $GITHUB_ENV

        #run: |
        #  URL=$(jq -r '.api_gateway_url.value' tf_outputs.json)
        #  echo "ENDPOINTS=$URL" >> $GITHUB_ENV

      # Run health check
      - name: Check API Endpoints
        run: node check-apis.js

      # Deploy
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
